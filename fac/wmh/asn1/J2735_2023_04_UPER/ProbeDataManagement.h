/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.7.0, Date: 25-May-2023.
 *
 * Command:  asn1c CooperativeControlMsg-v1-ph.asn J2735-AddGrpB.asn J2735-AddGrpC.asn J2735-BasicSafetyMessage-v4.asn J2735-CommonSafetyRequest.asn J2735-Common-v7.asn J2735-EmergencyVehicleAlert.asn J2735-IntersectionCollision.asn J2735-ITIS.asn J2735-MapData-v1.asn J2735-MessageFrame-v5.asn J2735-NMEAcorrections.asn J2735-NTCIP.asn J2735-PersonalSafetyMessage.asn J2735-ProbeDataManagement.asn J2735-ProbeVehicleData.asn J2735-REGION.asn J2735-RoadSideAlert.asn J2735-RTCMcorrections.asn J2735-SignalRequestMessage.asn J2735-SignalStatusMessage.asn J2735-SPAT-v2.asn J2735-TestMessage00.asn J2735-TestMessage01.asn J2735-TestMessage02.asn J2735-TestMessage03.asn J2735-TestMessage04.asn J2735-TestMessage05.asn J2735-TestMessage06.asn J2735-TestMessage07.asn J2735-TestMessage08.asn J2735-TestMessage09.asn J2735-TestMessage10.asn J2735-TestMessage11.asn J2735-TestMessage12.asn J2735-TestMessage13.asn J2735-TestMessage14.asn J2735-TestMessage15.asn J2735-TravelerInformation-v2.asn MnvrSharingCoordMsg-v1-ph.asn PersonalSafetyMsg2-v1-ph.asn ProbeDataConfig-v0.30.asn ProbeDataReport-v0.30.asn RoadGeoAttributes-v2-ph.asn RoadSafetyMsg-v1-ph.asn RoadWeatherMessage.asn SensorDataSharingMsg-v1-ph.asn SignalControlAndPrioritizationRequest-v1-ph.asn SignalControlAndPrioritizationStatus-v1-ph.asn TollAdvertisementMsg-v0.10-ph.asn TollUsageAckMsg-v0.10-ph.asn TollUsageMsg-v0.10-ph.asn TrafficSignalPhaseAndTiming-v1-ph.asn -c -per -compact
 */
#ifndef PROBEDATAMANAGEMENT_H
#define PROBEDATAMANAGEMENT_H

#ifdef __cplusplus
extern "C" {
#endif

#include "rtkey.h"
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module ProbeDataManagement
 */
/**************************************************************/
/*                                                            */
/*  GrossDistance                                             */
/*                                                            */
/**************************************************************/
/*
GrossDistance ::= INTEGER (0..1023)
                                     Units of 1.00 meters
    The value 1023 shall indicate unavailable

*/
typedef OSUINT16 GrossDistance;

EXTERN int asn1PE_GrossDistance (OSCTXT* pctxt, GrossDistance value);

EXTERN int asn1PD_GrossDistance (OSCTXT* pctxt, GrossDistance* pvalue);

/**************************************************************/
/*                                                            */
/*  SecondOfTime                                              */
/*                                                            */
/**************************************************************/
/*
SecondOfTime ::= INTEGER (0..61)
                                   units of seconds
     The value 60 shall be used for leap seconds
     or to indicate a full minute.
     The value 61 indicates that the value is unavailable

*/
typedef OSUINT8 SecondOfTime;

EXTERN int asn1PE_SecondOfTime (OSCTXT* pctxt, SecondOfTime value);

EXTERN int asn1PD_SecondOfTime (OSCTXT* pctxt, SecondOfTime* pvalue);

/**************************************************************/
/*                                                            */
/*  TermDistance                                              */
/*                                                            */
/**************************************************************/
/*
TermDistance ::= INTEGER (1..30000)
                                       units in meters

*/
typedef OSUINT16 TermDistance;

EXTERN int asn1PE_TermDistance (OSCTXT* pctxt, TermDistance value);

EXTERN int asn1PD_TermDistance (OSCTXT* pctxt, TermDistance* pvalue);

/**************************************************************/
/*                                                            */
/*  TermTime                                                  */
/*                                                            */
/**************************************************************/
/*
TermTime ::= INTEGER (1..1800)
                                units of sec

*/
typedef OSUINT16 TermTime;

EXTERN int asn1PE_TermTime (OSCTXT* pctxt, TermTime value);

EXTERN int asn1PD_TermTime (OSCTXT* pctxt, TermTime* pvalue);

#include "rtxsrc/rtxEnum.h"
/**************************************************************/
/*                                                            */
/*  VehicleStatusDeviceTypeTag                                */
/*                                                            */
/**************************************************************/
/*
VehicleStatusDeviceTypeTag ::= ENUMERATED { unknown(0), lights(1), wipers(2), brakes(3), stab(4), trac(5), abs(6), sunS(7), rainS(8), airTemp(9), steering(10), vertAccelThres(11), vertAccel(12), hozAccelLong(13), hozAccelLat(14), hozAccelCon(15), accel4way(16), confidenceSet(17), obDist(18), obDirect(19), yaw(20), yawRateCon(21), dateTime(22), fullPos(23), position2D(24), position3D(25), vehicle(26), speedHeadC(27), speedC(28), ... }
*/
typedef enum {
   unknown_6 = 0,
   lights = 1,
   wipers = 2,
   brakes = 3,
   stab = 4,
   trac = 5,
   abs_ = 6,
   sunS = 7,
   rainS = 8,
   airTemp = 9,
   steering = 10,
   vertAccelThres = 11,
   vertAccel = 12,
   hozAccelLong = 13,
   hozAccelLat = 14,
   hozAccelCon = 15,
   accel4way = 16,
   confidenceSet = 17,
   obDist = 18,
   obDirect = 19,
   yaw = 20,
   yawRateCon = 21,
   dateTime = 22,
   fullPos = 23,
   position2D = 24,
   position3D = 25,
   vehicle = 26,
   speedHeadC = 27,
   speedC = 28
} VehicleStatusDeviceTypeTag_Root;

typedef OSUINT8 VehicleStatusDeviceTypeTag;

EXTERN int asn1PE_VehicleStatusDeviceTypeTag (OSCTXT* pctxt, VehicleStatusDeviceTypeTag value);

EXTERN int asn1PD_VehicleStatusDeviceTypeTag (OSCTXT* pctxt, VehicleStatusDeviceTypeTag* pvalue);

EXTERN extern const OSEnumItem VehicleStatusDeviceTypeTag_ENUMTAB[];
#define VehicleStatusDeviceTypeTag_ENUMTABSIZE 29

EXTERN const OSUTF8CHAR* VehicleStatusDeviceTypeTag_ToString (OSINT32 value);

EXTERN int VehicleStatusDeviceTypeTag_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, VehicleStatusDeviceTypeTag* pvalue);

EXTERN int VehicleStatusDeviceTypeTag_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      VehicleStatusDeviceTypeTag* pvalue);

/**************************************************************/
/*                                                            */
/*  Sample                                                    */
/*                                                            */
/**************************************************************/
/*
Sample ::= SEQUENCE {
   sampleStart [0] INTEGER (0..255), --  Sample Starting Point
   sampleEnd [1] INTEGER (0..255) --  Sample Ending Point
}
*/
typedef struct EXTERN Sample {
   OSUINT8 sampleStart;
   OSUINT8 sampleEnd;
} Sample;

EXTERN int asn1PE_Sample (OSCTXT* pctxt, Sample* pvalue);

EXTERN int asn1PD_Sample (OSCTXT* pctxt, Sample* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_term                                  */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
/* Choice tag constants */

#define T_ProbeDataManagement_term_termtime 1
#define T_ProbeDataManagement_term_termDistance 2

typedef struct EXTERN ProbeDataManagement_term {
   OSINT32 t;
   union {
      /* t = 1 */
      TermTime termtime;
      /* t = 2 */
      TermDistance termDistance;
   } u;
} ProbeDataManagement_term;

EXTERN int asn1PE_ProbeDataManagement_term (OSCTXT* pctxt, ProbeDataManagement_term* pvalue);

EXTERN int asn1PD_ProbeDataManagement_term (OSCTXT* pctxt, ProbeDataManagement_term* pvalue);

EXTERN int asn1Init_ProbeDataManagement_term (ProbeDataManagement_term* pvalue);

/**************************************************************/
/*                                                            */
/*  SnapshotTime                                              */
/*                                                            */
/**************************************************************/
/*
SnapshotTime ::= SEQUENCE {
   speed1 [0] GrossSpeed, -- meters/sec - the instantaneous speed
                           -- when the calculation is performed
   time1 [1] SecondOfTime, -- in seconds
   speed2 [2] GrossSpeed, -- meters/sec - the instantaneous speed
                           -- when the calculation is performed
   time2 [3] SecondOfTime -- in seconds
}
*/
typedef struct EXTERN SnapshotTime {
   OSUINT8 speed1;
   SecondOfTime time1;
   OSUINT8 speed2;
   SecondOfTime time2;
} SnapshotTime;

EXTERN int asn1PE_SnapshotTime (OSCTXT* pctxt, SnapshotTime* pvalue);

EXTERN int asn1PD_SnapshotTime (OSCTXT* pctxt, SnapshotTime* pvalue);

/**************************************************************/
/*                                                            */
/*  SnapshotDistance                                          */
/*                                                            */
/**************************************************************/
/*
SnapshotDistance ::= SEQUENCE {
   distance1 [0] GrossDistance, -- meters
   speed1 [1] GrossSpeed, -- meters/second
   distance2 [2] GrossDistance, -- meters
   speed2 [3] GrossSpeed -- meters/second
}
*/
typedef struct EXTERN SnapshotDistance {
   GrossDistance distance1;
   OSUINT8 speed1;
   GrossDistance distance2;
   OSUINT8 speed2;
} SnapshotDistance;

EXTERN int asn1PE_SnapshotDistance (OSCTXT* pctxt, SnapshotDistance* pvalue);

EXTERN int asn1PD_SnapshotDistance (OSCTXT* pctxt, SnapshotDistance* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_snapshot                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
/* Choice tag constants */

#define T_ProbeDataManagement_snapshot_snapshotTime 1
#define T_ProbeDataManagement_snapshot_snapshotDistance 2

typedef struct EXTERN ProbeDataManagement_snapshot {
   OSINT32 t;
   union {
      /* t = 1 */
      SnapshotTime *snapshotTime;
      /* t = 2 */
      SnapshotDistance *snapshotDistance;
   } u;
} ProbeDataManagement_snapshot;

EXTERN int asn1PE_ProbeDataManagement_snapshot (OSCTXT* pctxt, ProbeDataManagement_snapshot* pvalue);

EXTERN int asn1PD_ProbeDataManagement_snapshot (OSCTXT* pctxt, ProbeDataManagement_snapshot* pvalue);

EXTERN int asn1Init_ProbeDataManagement_snapshot (
   ProbeDataManagement_snapshot* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleStatusRequest                                      */
/*                                                            */
/**************************************************************/
/*
VehicleStatusRequest ::= SEQUENCE {
   dataType [0] VehicleStatusDeviceTypeTag,
   subType [1] INTEGER (1..15) OPTIONAL,
   sendOnLessThenValue [2] INTEGER (-32767..32767) OPTIONAL,
   sendOnMoreThenValue [3] INTEGER (-32767..32767) OPTIONAL,
   sendAll [4] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN VehicleStatusRequest {
   struct {
      OSUINT8 subTypePresent : 1;
      OSUINT8 sendOnLessThenValuePresent : 1;
      OSUINT8 sendOnMoreThenValuePresent : 1;
      OSUINT8 sendAllPresent : 1;
   } m;
   VehicleStatusDeviceTypeTag dataType;
   OSUINT8 subType;
   OSINT16 sendOnLessThenValue;
   OSINT16 sendOnMoreThenValue;
   OSBOOL sendAll;
   OSRTDList extElem1;
} VehicleStatusRequest;

EXTERN int asn1PE_VehicleStatusRequest (OSCTXT* pctxt, VehicleStatusRequest* pvalue);

EXTERN int asn1PD_VehicleStatusRequest (OSCTXT* pctxt, VehicleStatusRequest* pvalue);

EXTERN int asn1Init_VehicleStatusRequest (VehicleStatusRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleStatusRequestList                                  */
/*                                                            */
/**************************************************************/
/*
VehicleStatusRequestList ::= SEQUENCE (SIZE (1..32)) OF VehicleStatusRequest
*/
/* List of VehicleStatusRequest */
typedef OSRTDList VehicleStatusRequestList;

EXTERN int asn1PE_VehicleStatusRequestList (OSCTXT* pctxt, VehicleStatusRequestList* pvalue);

EXTERN int asn1PD_VehicleStatusRequestList (OSCTXT* pctxt, VehicleStatusRequestList* pvalue);

EXTERN int asn1Init_VehicleStatusRequestList (VehicleStatusRequestList* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement_regional                              */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'ProbeDataManagement'
*/
struct EXTERN RegionalExtension;

/* List of RegionalExtension */
typedef OSRTDList ProbeDataManagement_regional;

EXTERN int asn1PE_ProbeDataManagement_regional (OSCTXT* pctxt, ProbeDataManagement_regional* pvalue);

EXTERN int asn1PD_ProbeDataManagement_regional (OSCTXT* pctxt, ProbeDataManagement_regional* pvalue);

EXTERN int asn1Init_ProbeDataManagement_regional (
   ProbeDataManagement_regional* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataManagement                                       */
/*                                                            */
/**************************************************************/
/*
ProbeDataManagement ::= SEQUENCE {
   timeStamp [0] MinuteOfTheYear OPTIONAL,
   sample [1] Sample, -- Identifies the vehicle
                                          -- population affected by this
   directions [2] HeadingSlice, -- Applicable headings/directions
   term [3] EXPLICIT CHOICE {
      termtime [0] TermTime, -- Terminate this management process
                                          -- based on Time-to-Live
      termDistance [1] TermDistance
   },
   snapshot [4] EXPLICIT CHOICE {
      snapshotTime [0] SnapshotTime, -- Collect snapshots based on Time
                                          -- the value 0 indicates forever
      snapshotDistance [1] SnapshotDistance
   },
   txInterval [5] SecondOfTime, -- Time Interval at which to send snapshots
   dataElements [6] VehicleStatusRequestList OPTIONAL,
                                          -- Control data frames and associated
                                          -- trigger thresholds to be changed
   regional [7] SEQUENCE (SIZE (1..4)) OF RegionalExtension OPTIONAL,
   ...
}
*/
typedef struct EXTERN ProbeDataManagement {
   struct {
      OSUINT8 timeStampPresent : 1;
      OSUINT8 dataElementsPresent : 1;
      OSUINT8 regionalPresent : 1;
   } m;
   OSUINT32 timeStamp;
   Sample sample;
   struct HeadingSlice *directions;
   ProbeDataManagement_term term;
   ProbeDataManagement_snapshot snapshot;
   SecondOfTime txInterval;
   VehicleStatusRequestList dataElements;
   ProbeDataManagement_regional regional;
   OSRTDList extElem1;
} ProbeDataManagement;

EXTERN int asn1PE_ProbeDataManagement (OSCTXT* pctxt, ProbeDataManagement* pvalue);

EXTERN int asn1PD_ProbeDataManagement (OSCTXT* pctxt, ProbeDataManagement* pvalue);

EXTERN int asn1Init_ProbeDataManagement (ProbeDataManagement* pvalue);

#ifdef __cplusplus
}
#endif

#endif
