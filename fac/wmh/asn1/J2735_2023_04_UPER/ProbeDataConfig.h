/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.7.0, Date: 25-May-2023.
 *
 * Command:  asn1c CooperativeControlMsg-v1-ph.asn J2735-AddGrpB.asn J2735-AddGrpC.asn J2735-BasicSafetyMessage-v4.asn J2735-CommonSafetyRequest.asn J2735-Common-v7.asn J2735-EmergencyVehicleAlert.asn J2735-IntersectionCollision.asn J2735-ITIS.asn J2735-MapData-v1.asn J2735-MessageFrame-v5.asn J2735-NMEAcorrections.asn J2735-NTCIP.asn J2735-PersonalSafetyMessage.asn J2735-ProbeDataManagement.asn J2735-ProbeVehicleData.asn J2735-REGION.asn J2735-RoadSideAlert.asn J2735-RTCMcorrections.asn J2735-SignalRequestMessage.asn J2735-SignalStatusMessage.asn J2735-SPAT-v2.asn J2735-TestMessage00.asn J2735-TestMessage01.asn J2735-TestMessage02.asn J2735-TestMessage03.asn J2735-TestMessage04.asn J2735-TestMessage05.asn J2735-TestMessage06.asn J2735-TestMessage07.asn J2735-TestMessage08.asn J2735-TestMessage09.asn J2735-TestMessage10.asn J2735-TestMessage11.asn J2735-TestMessage12.asn J2735-TestMessage13.asn J2735-TestMessage14.asn J2735-TestMessage15.asn J2735-TravelerInformation-v2.asn MnvrSharingCoordMsg-v1-ph.asn PersonalSafetyMsg2-v1-ph.asn ProbeDataConfig-v0.30.asn ProbeDataReport-v0.30.asn RoadGeoAttributes-v2-ph.asn RoadSafetyMsg-v1-ph.asn RoadWeatherMessage.asn SensorDataSharingMsg-v1-ph.asn SignalControlAndPrioritizationRequest-v1-ph.asn SignalControlAndPrioritizationStatus-v1-ph.asn TollAdvertisementMsg-v0.10-ph.asn TollUsageAckMsg-v0.10-ph.asn TollUsageMsg-v0.10-ph.asn TrafficSignalPhaseAndTiming-v1-ph.asn -c -per -compact
 */
#ifndef PROBEDATACONFIG_H
#define PROBEDATACONFIG_H

#ifdef __cplusplus
extern "C" {
#endif

#include "rtkey.h"
#include "rtpersrc/asn1per.h"

/**
 * Header file for ASN.1 module ProbeDataConfig
 */
/**************************************************************/
/*                                                            */
/*  ConfigId                                                  */
/*                                                            */
/**************************************************************/
/*
ConfigId ::= INTEGER (1..255)
*/
typedef OSUINT8 ConfigId;

EXTERN int asn1PE_ConfigId (OSCTXT* pctxt, ConfigId value);

EXTERN int asn1PD_ConfigId (OSCTXT* pctxt, ConfigId* pvalue);

#include "rtxsrc/rtxEnum.h"
/**************************************************************/
/*                                                            */
/*  CfgMsgDictionary                                          */
/*                                                            */
/**************************************************************/
/*
 Indicate which dictionary type
CfgMsgDictionary ::= ENUMERATED { sae(1), etsi(2), iso(3), ... }
*/
typedef enum {
   sae = 1,
   etsi = 2,
   iso = 3
} CfgMsgDictionary_Root;

typedef OSUINT8 CfgMsgDictionary;

EXTERN int asn1PE_CfgMsgDictionary (OSCTXT* pctxt, CfgMsgDictionary value);

EXTERN int asn1PD_CfgMsgDictionary (OSCTXT* pctxt, CfgMsgDictionary* pvalue);

EXTERN extern const OSEnumItem CfgMsgDictionary_ENUMTAB[];
#define CfgMsgDictionary_ENUMTABSIZE 3

EXTERN const OSUTF8CHAR* CfgMsgDictionary_ToString (OSINT32 value);

EXTERN int CfgMsgDictionary_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CfgMsgDictionary* pvalue);

EXTERN int CfgMsgDictionary_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, CfgMsgDictionary* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgVehicleClass                                           */
/*                                                            */
/**************************************************************/
/*
 The following are FHWA defined vehicle classes (types)
 See ProbeDataReport module for enumerated values
CfgVehicleClass ::= SEQUENCE {
   motorcycles [0] BOOLEAN,
   passengerCars [1] BOOLEAN,
   other2axle4tireSingleUnitVehs [2] BOOLEAN,
   buses [3] BOOLEAN,
   twoAxle6TireSingleUnitTrucks [4] BOOLEAN,
   threeAxleSingleUnitTrucks [5] BOOLEAN,
   fourOrMoreAxleSingleUnitTrucks [6] BOOLEAN,
   fourOrFewerAxleSingleTrailerTrucks [7] BOOLEAN,
   fiveAxleSingleTrailerTrucks [8] BOOLEAN,
   sixOrMoreAxleSingleTrailerTrucks [9] BOOLEAN,
   fiveOrFewerAxleMultiTrailerTrucks [10] BOOLEAN,
   sixAxleMultiTrailerTrucks [11] BOOLEAN,
   sevenOrMoreAxleMultiTrailerTrucks [12] BOOLEAN,
   ...
}
*/
typedef struct EXTERN CfgVehicleClass {
   OSBOOL motorcycles;
   OSBOOL passengerCars;
   OSBOOL other2axle4tireSingleUnitVehs;
   OSBOOL buses;
   OSBOOL twoAxle6TireSingleUnitTrucks;
   OSBOOL threeAxleSingleUnitTrucks;
   OSBOOL fourOrMoreAxleSingleUnitTrucks;
   OSBOOL fourOrFewerAxleSingleTrailerTrucks;
   OSBOOL fiveAxleSingleTrailerTrucks;
   OSBOOL sixOrMoreAxleSingleTrailerTrucks;
   OSBOOL fiveOrFewerAxleMultiTrailerTrucks;
   OSBOOL sixAxleMultiTrailerTrucks;
   OSBOOL sevenOrMoreAxleMultiTrailerTrucks;
   OSRTDList extElem1;
} CfgVehicleClass;

EXTERN int asn1PE_CfgVehicleClass (OSCTXT* pctxt, CfgVehicleClass* pvalue);

EXTERN int asn1PD_CfgVehicleClass (OSCTXT* pctxt, CfgVehicleClass* pvalue);

EXTERN int asn1Init_CfgVehicleClass (CfgVehicleClass* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigDescriptor                                          */
/*                                                            */
/**************************************************************/
/*
ConfigDescriptor ::= SEQUENCE {
   identifier [0] ConfigId,
   vehClass [1] CfgVehicleClass OPTIONAL,
   roadAuthorityID [2] EXPLICIT RoadAuthorityID OPTIONAL,
   percentOfResp [3] INTEGER (1..10) OPTIONAL,
   ...
}
*/
typedef struct EXTERN ConfigDescriptor {
   struct {
      OSUINT8 vehClassPresent : 1;
      OSUINT8 roadAuthorityIDPresent : 1;
      OSUINT8 percentOfRespPresent : 1;
   } m;
   ConfigId identifier;
   CfgVehicleClass vehClass;
   struct RoadAuthorityID *roadAuthorityID;
   OSUINT8 percentOfResp;
   OSRTDList extElem1;
} ConfigDescriptor;

EXTERN int asn1PE_ConfigDescriptor (OSCTXT* pctxt, ConfigDescriptor* pvalue);

EXTERN int asn1PD_ConfigDescriptor (OSCTXT* pctxt, ConfigDescriptor* pvalue);

EXTERN int asn1Init_ConfigDescriptor (ConfigDescriptor* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgInterval                                               */
/*                                                            */
/**************************************************************/
/*
CfgInterval ::= CHOICE {
   timeInterval [0] INTEGER (1..36000), -- in tenths of seconds up to an hour
   distanceInterval [1] INTEGER (1..100),
   ...
}
*/
/* Choice tag constants */

#define T_CfgInterval_timeInterval      1
#define T_CfgInterval_distanceInterval  2
#define T_CfgInterval_extElem1          3

typedef struct EXTERN CfgInterval {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT16 timeInterval;
      /* t = 2 */
      OSUINT8 distanceInterval;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} CfgInterval;

EXTERN int asn1PE_CfgInterval (OSCTXT* pctxt, CfgInterval* pvalue);

EXTERN int asn1PD_CfgInterval (OSCTXT* pctxt, CfgInterval* pvalue);

EXTERN int asn1Init_CfgInterval (CfgInterval* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgTransitVehicleData                                     */
/*                                                            */
/**************************************************************/
/*
CfgTransitVehicleData ::= SEQUENCE {
   currNumPasngers [0] BOOLEAN OPTIONAL,
   avgNumPasngers [1] BOOLEAN OPTIONAL,
   trnstVehSchAdh [2] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgTransitVehicleData {
   struct {
      OSUINT8 currNumPasngersPresent : 1;
      OSUINT8 avgNumPasngersPresent : 1;
      OSUINT8 trnstVehSchAdhPresent : 1;
   } m;
   OSBOOL currNumPasngers;
   OSBOOL avgNumPasngers;
   OSBOOL trnstVehSchAdh;
   OSRTDList extElem1;
} CfgTransitVehicleData;

EXTERN int asn1PE_CfgTransitVehicleData (OSCTXT* pctxt, CfgTransitVehicleData* pvalue);

EXTERN int asn1PD_CfgTransitVehicleData (OSCTXT* pctxt, CfgTransitVehicleData* pvalue);

EXTERN int asn1Init_CfgTransitVehicleData (CfgTransitVehicleData* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgIntervalEvents                                         */
/*                                                            */
/**************************************************************/
/*
CfgIntervalEvents ::= SEQUENCE {
   interval [0] EXPLICIT CfgInterval,
   wiperStatus [1] BOOLEAN OPTIONAL,
   vehCount [2] BOOLEAN OPTIONAL,
     -- Count of V2V equipped vehicles encountered during the interval
   weatherData [3] BOOLEAN OPTIONAL,
   transitVehData [4] CfgTransitVehicleData OPTIONAL,
     -- Multiple parameters from Transit vehicles
   numOfOccupants [5] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgIntervalEvents {
   struct {
      OSUINT8 wiperStatusPresent : 1;
      OSUINT8 vehCountPresent : 1;
      OSUINT8 weatherDataPresent : 1;
      OSUINT8 transitVehDataPresent : 1;
      OSUINT8 numOfOccupantsPresent : 1;
   } m;
   CfgInterval interval;
   OSBOOL wiperStatus;
   OSBOOL vehCount;
   OSBOOL weatherData;
   CfgTransitVehicleData transitVehData;
   OSBOOL numOfOccupants;
   OSRTDList extElem1;
} CfgIntervalEvents;

EXTERN int asn1PE_CfgIntervalEvents (OSCTXT* pctxt, CfgIntervalEvents* pvalue);

EXTERN int asn1PD_CfgIntervalEvents (OSCTXT* pctxt, CfgIntervalEvents* pvalue);

EXTERN int asn1Init_CfgIntervalEvents (CfgIntervalEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgEvents                                                 */
/*                                                            */
/**************************************************************/
/*
CfgEvents ::= SEQUENCE {
   absActivated [0] BOOLEAN OPTIONAL,
   tractionCtlLoss [1] BOOLEAN OPTIONAL,
   stabilityCtlActivated [2] BOOLEAN OPTIONAL,
   hardBraking [3] BOOLEAN OPTIONAL,
   swerveThreshold [4] INTEGER (1..50) OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgEvents {
   struct {
      OSUINT8 absActivatedPresent : 1;
      OSUINT8 tractionCtlLossPresent : 1;
      OSUINT8 stabilityCtlActivatedPresent : 1;
      OSUINT8 hardBrakingPresent : 1;
      OSUINT8 swerveThresholdPresent : 1;
   } m;
   OSBOOL absActivated;
   OSBOOL tractionCtlLoss;
   OSBOOL stabilityCtlActivated;
   OSBOOL hardBraking;
   OSUINT8 swerveThreshold;
   OSRTDList extElem1;
} CfgEvents;

EXTERN int asn1PE_CfgEvents (OSCTXT* pctxt, CfgEvents* pvalue);

EXTERN int asn1PD_CfgEvents (OSCTXT* pctxt, CfgEvents* pvalue);

EXTERN int asn1Init_CfgEvents (CfgEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgHysteresis                                             */
/*                                                            */
/**************************************************************/
/*
CfgHysteresis ::= SEQUENCE {
   hysSamples [0] INTEGER (1..10),
     -- Value indicates the number of samples before and after the event
   hysRate [1] INTEGER (1..10),
   ...
}
*/
typedef struct EXTERN CfgHysteresis {
   OSUINT8 hysSamples;
   OSUINT8 hysRate;
   OSRTDList extElem1;
} CfgHysteresis;

EXTERN int asn1PE_CfgHysteresis (OSCTXT* pctxt, CfgHysteresis* pvalue);

EXTERN int asn1PD_CfgHysteresis (OSCTXT* pctxt, CfgHysteresis* pvalue);

EXTERN int asn1Init_CfgHysteresis (CfgHysteresis* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgKinematicEvents                                        */
/*                                                            */
/**************************************************************/
/*
CfgKinematicEvents ::= SEQUENCE {
   events [0] CfgEvents,
   hysteresis [1] CfgHysteresis OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgKinematicEvents {
   struct {
      OSUINT8 hysteresisPresent : 1;
   } m;
   CfgEvents events;
   CfgHysteresis hysteresis;
   OSRTDList extElem1;
} CfgKinematicEvents;

EXTERN int asn1PE_CfgKinematicEvents (OSCTXT* pctxt, CfgKinematicEvents* pvalue);

EXTERN int asn1PD_CfgKinematicEvents (OSCTXT* pctxt, CfgKinematicEvents* pvalue);

EXTERN int asn1Init_CfgKinematicEvents (CfgKinematicEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgLowSpeedCriteria                                       */
/*                                                            */
/**************************************************************/
/*
CfgLowSpeedCriteria ::= SEQUENCE {
   lowSpeedThreshold [0] INTEGER (5..100), -- In KPH
   lowSpeedTimeThresh [1] INTEGER (1..30) OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgLowSpeedCriteria {
   struct {
      OSUINT8 lowSpeedTimeThreshPresent : 1;
   } m;
   OSUINT8 lowSpeedThreshold;
   OSUINT8 lowSpeedTimeThresh;
   OSRTDList extElem1;
} CfgLowSpeedCriteria;

EXTERN int asn1PE_CfgLowSpeedCriteria (OSCTXT* pctxt, CfgLowSpeedCriteria* pvalue);

EXTERN int asn1PD_CfgLowSpeedCriteria (OSCTXT* pctxt, CfgLowSpeedCriteria* pvalue);

EXTERN int asn1Init_CfgLowSpeedCriteria (CfgLowSpeedCriteria* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgEmerAndTransitInfo                                     */
/*                                                            */
/**************************************************************/
/*
CfgEmerAndTransitInfo ::= CHOICE {
   emerVehLightBar [0] BOOLEAN,
     -- Emergency vehicle light bar turned on/off (reported by the emergency vehicle only)
   reqTspEvp [1] BOOLEAN,
     -- TSP/EVP requested (transit and emergency vehicles only)
   transitVehPassCnt [2] BOOLEAN,
     -- Transit Vehicle passenger count change and resulting number of occupants
   transitVehDoor [3] BOOLEAN,
   ...
}
*/
/* Choice tag constants */

#define T_CfgEmerAndTransitInfo_emerVehLightBar 1
#define T_CfgEmerAndTransitInfo_reqTspEvp 2
#define T_CfgEmerAndTransitInfo_transitVehPassCnt 3
#define T_CfgEmerAndTransitInfo_transitVehDoor 4
#define T_CfgEmerAndTransitInfo_extElem1 5

typedef struct EXTERN CfgEmerAndTransitInfo {
   OSINT32 t;
   union {
      /* t = 1 */
      OSBOOL emerVehLightBar;
      /* t = 2 */
      OSBOOL reqTspEvp;
      /* t = 3 */
      OSBOOL transitVehPassCnt;
      /* t = 4 */
      OSBOOL transitVehDoor;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} CfgEmerAndTransitInfo;

EXTERN int asn1PE_CfgEmerAndTransitInfo (OSCTXT* pctxt, CfgEmerAndTransitInfo* pvalue);

EXTERN int asn1PD_CfgEmerAndTransitInfo (OSCTXT* pctxt, CfgEmerAndTransitInfo* pvalue);

EXTERN int asn1Init_CfgEmerAndTransitInfo (CfgEmerAndTransitInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgMsgRecepIndicators_messages                            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CfgMsgRecepIndicators'
*/
typedef struct EXTERN CfgMsgRecepIndicators_messages {
   OSSIZE n;
   OSUINT16 *elem;
} CfgMsgRecepIndicators_messages;

EXTERN int asn1PE_CfgMsgRecepIndicators_messages (OSCTXT* pctxt, CfgMsgRecepIndicators_messages* pvalue);

EXTERN int asn1PD_CfgMsgRecepIndicators_messages (OSCTXT* pctxt, CfgMsgRecepIndicators_messages* pvalue);

EXTERN int asn1Init_CfgMsgRecepIndicators_messages (
   CfgMsgRecepIndicators_messages* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgMsgRecepIndicators                                     */
/*                                                            */
/**************************************************************/
/*
CfgMsgRecepIndicators ::= SEQUENCE {
   msgDictionary [0] CfgMsgDictionary OPTIONAL,
   messages [1] SEQUENCE (SIZE (1..8, ...)) OF DSRCmsgID OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgMsgRecepIndicators {
   struct {
      OSUINT8 msgDictionaryPresent : 1;
      OSUINT8 messagesPresent : 1;
   } m;
   CfgMsgDictionary msgDictionary;
   CfgMsgRecepIndicators_messages messages;
   OSRTDList extElem1;
} CfgMsgRecepIndicators;

EXTERN int asn1PE_CfgMsgRecepIndicators (OSCTXT* pctxt, CfgMsgRecepIndicators* pvalue);

EXTERN int asn1PD_CfgMsgRecepIndicators (OSCTXT* pctxt, CfgMsgRecepIndicators* pvalue);

EXTERN int asn1Init_CfgMsgRecepIndicators (CfgMsgRecepIndicators* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgVehicleEvents                                          */
/*                                                            */
/**************************************************************/
/*
CfgVehicleEvents ::= SEQUENCE {
   headLights [0] BOOLEAN OPTIONAL,
   fogLights [1] BOOLEAN OPTIONAL,
   hazardLights [2] BOOLEAN OPTIONAL,
   kinematicEvents [3] CfgKinematicEvents OPTIONAL,
   wiperStatusChange [4] BOOLEAN OPTIONAL,
   lowSpeed [5] CfgLowSpeedCriteria OPTIONAL,
     -- Speed falls below a threshold (MIN 5 KPH) for a defined duration (in seconds)
   resumedSpeed [6] INTEGER (1..100) OPTIONAL,
     -- Speed goes above a certain threshold, in KPH
   vehEntrsExitsRegion [7] BOOLEAN OPTIONAL,
     -- Vehicle enters or exits the region defined in ConfigBoundary
   emerVehDetect [8] BOOLEAN OPTIONAL,
     -- Emergency vehicle detected by a non-emergency vehicle
   emerAndTransInfo [9] EXPLICIT CfgEmerAndTransitInfo OPTIONAL,
     -- Info pertaining to emergency or transit vehicles
   v2xMsgRecption [10] CfgMsgRecepIndicators OPTIONAL,
     -- V2X message reception: reception of any V2X message over the communications
     -- interface(s), identified by indicating the desired data
     -- dictionary (e.g. SAE J2735, ETSI and ISO data dictionary documents) and
     -- message IDs in the configuration.
   driverAlertsAndWarnings [11] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgVehicleEvents {
   struct {
      OSUINT8 headLightsPresent : 1;
      OSUINT8 fogLightsPresent : 1;
      OSUINT8 hazardLightsPresent : 1;
      OSUINT8 kinematicEventsPresent : 1;
      OSUINT8 wiperStatusChangePresent : 1;
      OSUINT8 lowSpeedPresent : 1;
      OSUINT8 resumedSpeedPresent : 1;
      OSUINT8 vehEntrsExitsRegionPresent : 1;
      OSUINT8 emerVehDetectPresent : 1;
      OSUINT8 emerAndTransInfoPresent : 1;
      OSUINT8 v2xMsgRecptionPresent : 1;
      OSUINT8 driverAlertsAndWarningsPresent : 1;
   } m;
   OSBOOL headLights;
   OSBOOL fogLights;
   OSBOOL hazardLights;
   CfgKinematicEvents kinematicEvents;
   OSBOOL wiperStatusChange;
   CfgLowSpeedCriteria lowSpeed;
   OSUINT8 resumedSpeed;
   OSBOOL vehEntrsExitsRegion;
   OSBOOL emerVehDetect;
   CfgEmerAndTransitInfo emerAndTransInfo;
   CfgMsgRecepIndicators v2xMsgRecption;
   OSBOOL driverAlertsAndWarnings;
   OSRTDList extElem1;
} CfgVehicleEvents;

EXTERN int asn1PE_CfgVehicleEvents (OSCTXT* pctxt, CfgVehicleEvents* pvalue);

EXTERN int asn1PD_CfgVehicleEvents (OSCTXT* pctxt, CfgVehicleEvents* pvalue);

EXTERN int asn1Init_CfgVehicleEvents (CfgVehicleEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgTrafficSigEncounters_intersections                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'CfgTrafficSigEncounters'
*/
typedef struct EXTERN CfgTrafficSigEncounters_intersections {
   OSSIZE n;
   OSUINT16 *elem;
} CfgTrafficSigEncounters_intersections;

EXTERN int asn1PE_CfgTrafficSigEncounters_intersections (OSCTXT* pctxt, CfgTrafficSigEncounters_intersections* pvalue);

EXTERN int asn1PD_CfgTrafficSigEncounters_intersections (OSCTXT* pctxt, CfgTrafficSigEncounters_intersections* pvalue);

EXTERN int asn1Init_CfgTrafficSigEncounters_intersections (
   CfgTrafficSigEncounters_intersections* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgTrafficSigEncounters                                   */
/*                                                            */
/**************************************************************/
/*
CfgTrafficSigEncounters ::= SEQUENCE {
   intersections [0] SEQUENCE (SIZE (1..100)) OF IntersectionID OPTIONAL,
     -- Intersection IDs typically used in SPAT and MAP messsages
   trfcsigApproachDelay [1] INTEGER (1..3600) OPTIONAL,
     -- In seconds, triggered if higher
   trfsigApproachSpeed [2] INTEGER (1..200) OPTIONAL,
     -- In KPH, triggered if lower
   trfsigArrivalGreen [3] BOOLEAN OPTIONAL,
   trfsigArrivalRed [4] BOOLEAN OPTIONAL,
   trfsigPedDelay [5] INTEGER (1..300) OPTIONAL,
     -- In seconds, triggered if higher
   trfsigSpatMismatch [6] BOOLEAN OPTIONAL,
   trfsigSpatTimingError [7] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgTrafficSigEncounters {
   struct {
      OSUINT8 intersectionsPresent : 1;
      OSUINT8 trfcsigApproachDelayPresent : 1;
      OSUINT8 trfsigApproachSpeedPresent : 1;
      OSUINT8 trfsigArrivalGreenPresent : 1;
      OSUINT8 trfsigArrivalRedPresent : 1;
      OSUINT8 trfsigPedDelayPresent : 1;
      OSUINT8 trfsigSpatMismatchPresent : 1;
      OSUINT8 trfsigSpatTimingErrorPresent : 1;
   } m;
   CfgTrafficSigEncounters_intersections intersections;
   OSUINT16 trfcsigApproachDelay;
   OSUINT8 trfsigApproachSpeed;
   OSBOOL trfsigArrivalGreen;
   OSBOOL trfsigArrivalRed;
   OSUINT16 trfsigPedDelay;
   OSBOOL trfsigSpatMismatch;
   OSBOOL trfsigSpatTimingError;
   OSRTDList extElem1;
} CfgTrafficSigEncounters;

EXTERN int asn1PE_CfgTrafficSigEncounters (OSCTXT* pctxt, CfgTrafficSigEncounters* pvalue);

EXTERN int asn1PD_CfgTrafficSigEncounters (OSCTXT* pctxt, CfgTrafficSigEncounters* pvalue);

EXTERN int asn1Init_CfgTrafficSigEncounters (CfgTrafficSigEncounters* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgRoadSignTypes                                          */
/*                                                            */
/**************************************************************/
/*
CfgRoadSignTypes ::= SEQUENCE {
   whiteOnGreen [0] BOOLEAN OPTIONAL,
   blackOnYellow [1] BOOLEAN OPTIONAL,
   blackOnOrange [2] BOOLEAN OPTIONAL,
   whiteOnRed [3] BOOLEAN OPTIONAL,
   blackOnWhite [4] BOOLEAN OPTIONAL,
   octagon [5] BOOLEAN OPTIONAL,
   eqlatTriangle [6] BOOLEAN OPTIONAL,
   circle [7] BOOLEAN OPTIONAL,
   pennant [8] BOOLEAN OPTIONAL,
   pentagon [9] BOOLEAN OPTIONAL,
   crossbuck [10] BOOLEAN OPTIONAL,
   diamond [11] BOOLEAN OPTIONAL,
   trapezoid [12] BOOLEAN OPTIONAL,
   other [13] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgRoadSignTypes {
   struct {
      OSUINT8 whiteOnGreenPresent : 1;
      OSUINT8 blackOnYellowPresent : 1;
      OSUINT8 blackOnOrangePresent : 1;
      OSUINT8 whiteOnRedPresent : 1;
      OSUINT8 blackOnWhitePresent : 1;
      OSUINT8 octagonPresent : 1;
      OSUINT8 eqlatTrianglePresent : 1;
      OSUINT8 circlePresent : 1;
      OSUINT8 pennantPresent : 1;
      OSUINT8 pentagonPresent : 1;
      OSUINT8 crossbuckPresent : 1;
      OSUINT8 diamondPresent : 1;
      OSUINT8 trapezoidPresent : 1;
      OSUINT8 otherPresent : 1;
   } m;
   OSBOOL whiteOnGreen;
   OSBOOL blackOnYellow;
   OSBOOL blackOnOrange;
   OSBOOL whiteOnRed;
   OSBOOL blackOnWhite;
   OSBOOL octagon;
   OSBOOL eqlatTriangle;
   OSBOOL circle;
   OSBOOL pennant;
   OSBOOL pentagon;
   OSBOOL crossbuck;
   OSBOOL diamond;
   OSBOOL trapezoid;
   OSBOOL other;
   OSRTDList extElem1;
} CfgRoadSignTypes;

EXTERN int asn1PE_CfgRoadSignTypes (OSCTXT* pctxt, CfgRoadSignTypes* pvalue);

EXTERN int asn1PD_CfgRoadSignTypes (OSCTXT* pctxt, CfgRoadSignTypes* pvalue);

EXTERN int asn1Init_CfgRoadSignTypes (CfgRoadSignTypes* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgRoadSignInfo                                           */
/*                                                            */
/**************************************************************/
/*
CfgRoadSignInfo ::= SEQUENCE {
   roadsignDetection [0] CfgRoadSignTypes,
             -- Road sign types
   lowRoadsignReflect1 [1] INTEGER (1..250) OPTIONAL,
             -- Min threshold for 1st color
   lowRoadsignReflect2 [2] INTEGER (1..250) OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgRoadSignInfo {
   struct {
      OSUINT8 lowRoadsignReflect1Present : 1;
      OSUINT8 lowRoadsignReflect2Present : 1;
   } m;
   CfgRoadSignTypes roadsignDetection;
   OSUINT8 lowRoadsignReflect1;
   OSUINT8 lowRoadsignReflect2;
   OSRTDList extElem1;
} CfgRoadSignInfo;

EXTERN int asn1PE_CfgRoadSignInfo (OSCTXT* pctxt, CfgRoadSignInfo* pvalue);

EXTERN int asn1PD_CfgRoadSignInfo (OSCTXT* pctxt, CfgRoadSignInfo* pvalue);

EXTERN int asn1Init_CfgRoadSignInfo (CfgRoadSignInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgRoadwayEvents                                          */
/*                                                            */
/**************************************************************/
/*
 The following are criteria by which the associated event will be reported
CfgRoadwayEvents ::= SEQUENCE {
   obstacleDetected [0] BOOLEAN,
   adverseRoadSurface [1] BOOLEAN,
     -- Adverse road surface condition (non-weather related: potholes, road roughness).
   trafficSigEncounters [2] CfgTrafficSigEncounters OPTIONAL,
     -- Traffic signal related parameters
   trfsigLightOut [3] BOOLEAN,
   trfsigRoadGeoMismatch [4] BOOLEAN,
   roadSignInfo [5] CfgRoadSignInfo OPTIONAL,
   lowLaneMarkReflect [6] INTEGER (1..100) OPTIONAL,
     -- Identify types of roadsigns and report back reflectivity
     -- Low lane marking retro reflectivity (falls below a specified threshold
     -- in % light returned)
   roadsignIncnstncy [7] BOOLEAN,
     -- Roadsign inconsistency or unexpected closure (posted sign inconsistent
     -- with on-board map)
   laneGeoIncnstncy [8] BOOLEAN,
     -- Lane geometry inconsistency (difficult to interpret because of being covered
     -- up or ambiguous, or different from on-board map)
   incidentDetect [9] BOOLEAN,
     -- Incident detection (car accident, wrong way driver, slowdown in
     -- opposite direction)
   workZoneCharDetect [10] BOOLEAN,
     -- Detection of work zone characteristics: workers present, lane shifts and
     -- lane closures
   inclWeatherDetect [11] BOOLEAN,
     -- Detection of inclement weather or weather-related road surface
     -- condition (SAE J2945/3 - heavy rain, fog, wind, ice, snow)
   railrdCrossActivated [12] BOOLEAN,
     -- Railroad crossing activated
   drawBridgeActivated [13] BOOLEAN,
   ...
}
*/
typedef struct EXTERN CfgRoadwayEvents {
   struct {
      OSUINT8 trafficSigEncountersPresent : 1;
      OSUINT8 roadSignInfoPresent : 1;
      OSUINT8 lowLaneMarkReflectPresent : 1;
   } m;
   OSBOOL obstacleDetected;
   OSBOOL adverseRoadSurface;
   CfgTrafficSigEncounters trafficSigEncounters;
   OSBOOL trfsigLightOut;
   OSBOOL trfsigRoadGeoMismatch;
   CfgRoadSignInfo roadSignInfo;
   OSUINT8 lowLaneMarkReflect;
   OSBOOL roadsignIncnstncy;
   OSBOOL laneGeoIncnstncy;
   OSBOOL incidentDetect;
   OSBOOL workZoneCharDetect;
   OSBOOL inclWeatherDetect;
   OSBOOL railrdCrossActivated;
   OSBOOL drawBridgeActivated;
   OSRTDList extElem1;
} CfgRoadwayEvents;

EXTERN int asn1PE_CfgRoadwayEvents (OSCTXT* pctxt, CfgRoadwayEvents* pvalue);

EXTERN int asn1PD_CfgRoadwayEvents (OSCTXT* pctxt, CfgRoadwayEvents* pvalue);

EXTERN int asn1Init_CfgRoadwayEvents (CfgRoadwayEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgCommSysPerfEvents                                      */
/*                                                            */
/**************************************************************/
/*
CfgCommSysPerfEvents ::= SEQUENCE {
   j2945-1ChanBusyThresh [0] INTEGER (1..100) OPTIONAL,
     -- Based on J2945/1 Channel busy percentage measured over last 100ms
   rfDataRsuInfo [1] BOOLEAN OPTIONAL,
   numRsusObservedThresh [2] INTEGER (1..254) OPTIONAL,
     -- Threshold for numOfRsusObserved
     -- RF Triggers:
   rfV2xJamDetectThresh [3] INTEGER (1..140) OPTIONAL,
     -- 5.9 GHZ V2X Radio Jamming detection (if equipped)in -dBm
   j2945-1VehDensThresh [4] INTEGER (1..255) OPTIONAL,
     -- J2945/1 Vehicle Density in range exceeds specified threshold (number of vehicles)
   j2945-1CqiBelowThresh [5] INTEGER (1..100) OPTIONAL,
     -- J2945/1 CQI falls below a specified threshold (poor link quality)
   j2945-1TrackErrorThresh [6] INTEGER (1..100) OPTIONAL,
     -- J2945/1 Tracking Error estimate exceed a specified threshold in meters.
     -- GNSS Performance Triggers:
   gnssHdopExceedsThresh [7] INTEGER (1..20) OPTIONAL,
     -- HDOP exceeds a specified threshold
     -- If stationary do not report more than once
   gnssSatsBelowThresh [8] INTEGER (1..20) OPTIONAL,
     -- Satellites in view goes below a specified threshold
   gnssJammingDetect [9] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgCommSysPerfEvents {
   struct {
      OSUINT8 j2945_1ChanBusyThreshPresent : 1;
      OSUINT8 rfDataRsuInfoPresent : 1;
      OSUINT8 numRsusObservedThreshPresent : 1;
      OSUINT8 rfV2xJamDetectThreshPresent : 1;
      OSUINT8 j2945_1VehDensThreshPresent : 1;
      OSUINT8 j2945_1CqiBelowThreshPresent : 1;
      OSUINT8 j2945_1TrackErrorThreshPresent : 1;
      OSUINT8 gnssHdopExceedsThreshPresent : 1;
      OSUINT8 gnssSatsBelowThreshPresent : 1;
      OSUINT8 gnssJammingDetectPresent : 1;
   } m;
   OSUINT8 j2945_1ChanBusyThresh;
   OSBOOL rfDataRsuInfo;
   OSUINT8 numRsusObservedThresh;
   OSUINT8 rfV2xJamDetectThresh;
   OSUINT8 j2945_1VehDensThresh;
   OSUINT8 j2945_1CqiBelowThresh;
   OSUINT8 j2945_1TrackErrorThresh;
   OSUINT8 gnssHdopExceedsThresh;
   OSUINT8 gnssSatsBelowThresh;
   OSBOOL gnssJammingDetect;
   OSRTDList extElem1;
} CfgCommSysPerfEvents;

EXTERN int asn1PE_CfgCommSysPerfEvents (OSCTXT* pctxt, CfgCommSysPerfEvents* pvalue);

EXTERN int asn1PD_CfgCommSysPerfEvents (OSCTXT* pctxt, CfgCommSysPerfEvents* pvalue);

EXTERN int asn1Init_CfgCommSysPerfEvents (CfgCommSysPerfEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgInstantaneousEventTriggers                             */
/*                                                            */
/**************************************************************/
/*
CfgInstantaneousEventTriggers ::= CHOICE {
   intervalEvents [0] CfgIntervalEvents,
   vehicleEvents [1] CfgVehicleEvents,
   roadwayEvents [2] CfgRoadwayEvents,
   commSysPerfEvents [3] CfgCommSysPerfEvents,
   ...
}
*/
/* Choice tag constants */

#define T_CfgInstantaneousEventTriggers_intervalEvents 1
#define T_CfgInstantaneousEventTriggers_vehicleEvents 2
#define T_CfgInstantaneousEventTriggers_roadwayEvents 3
#define T_CfgInstantaneousEventTriggers_commSysPerfEvents 4
#define T_CfgInstantaneousEventTriggers_extElem1 5

typedef struct EXTERN CfgInstantaneousEventTriggers {
   OSINT32 t;
   union {
      /* t = 1 */
      CfgIntervalEvents *intervalEvents;
      /* t = 2 */
      CfgVehicleEvents *vehicleEvents;
      /* t = 3 */
      CfgRoadwayEvents *roadwayEvents;
      /* t = 4 */
      CfgCommSysPerfEvents *commSysPerfEvents;
      /* t = 5 */
      ASN1OpenType *extElem1;
   } u;
} CfgInstantaneousEventTriggers;

EXTERN int asn1PE_CfgInstantaneousEventTriggers (OSCTXT* pctxt, CfgInstantaneousEventTriggers* pvalue);

EXTERN int asn1PD_CfgInstantaneousEventTriggers (OSCTXT* pctxt, CfgInstantaneousEventTriggers* pvalue);

EXTERN int asn1Init_CfgInstantaneousEventTriggers (
   CfgInstantaneousEventTriggers* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgAveragedTriggers                                       */
/*                                                            */
/**************************************************************/
/*
CfgAveragedTriggers ::= SEQUENCE {
   avgSpeed [0] BOOLEAN OPTIONAL, -- in KPH
   avgStopDuration [1] BOOLEAN OPTIONAL, -- in Seconds
   avgFuelConsumption [2] BOOLEAN OPTIONAL, -- in Liters
   avgEmissions [3] BOOLEAN OPTIONAL,
   avgNumOfOccupants [4] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgAveragedTriggers {
   struct {
      OSUINT8 avgSpeedPresent : 1;
      OSUINT8 avgStopDurationPresent : 1;
      OSUINT8 avgFuelConsumptionPresent : 1;
      OSUINT8 avgEmissionsPresent : 1;
      OSUINT8 avgNumOfOccupantsPresent : 1;
   } m;
   OSBOOL avgSpeed;
   OSBOOL avgStopDuration;
   OSBOOL avgFuelConsumption;
   OSBOOL avgEmissions;
   OSBOOL avgNumOfOccupants;
   OSRTDList extElem1;
} CfgAveragedTriggers;

EXTERN int asn1PE_CfgAveragedTriggers (OSCTXT* pctxt, CfgAveragedTriggers* pvalue);

EXTERN int asn1PD_CfgAveragedTriggers (OSCTXT* pctxt, CfgAveragedTriggers* pvalue);

EXTERN int asn1Init_CfgAveragedTriggers (CfgAveragedTriggers* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgStoppedCriteria                                        */
/*                                                            */
/**************************************************************/
/*
CfgStoppedCriteria ::= SEQUENCE {
   stoppedSpeedThreshold [0] INTEGER (1..30), -- in KPH
   amountOfTimeBelow [1] INTEGER (1..300),
   ...
}
*/
typedef struct EXTERN CfgStoppedCriteria {
   OSUINT8 stoppedSpeedThreshold;
   OSUINT16 amountOfTimeBelow;
   OSRTDList extElem1;
} CfgStoppedCriteria;

EXTERN int asn1PE_CfgStoppedCriteria (OSCTXT* pctxt, CfgStoppedCriteria* pvalue);

EXTERN int asn1PD_CfgStoppedCriteria (OSCTXT* pctxt, CfgStoppedCriteria* pvalue);

EXTERN int asn1Init_CfgStoppedCriteria (CfgStoppedCriteria* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgSummaryTriggers                                        */
/*                                                            */
/**************************************************************/
/*
CfgSummaryTriggers ::= SEQUENCE {
   regTravelTime [0] BOOLEAN OPTIONAL,
     -- Total travel time to traverse the region in seconds
   regVehDistTraveled [1] BOOLEAN OPTIONAL,
     -- Total vehicle distance traveled within the region (kilometers)
   regVehTimeTraveled [2] BOOLEAN OPTIONAL,
     -- Total vehicle time traveled within the region (seconds)
   fuelConsumption [3] BOOLEAN OPTIONAL,
     -- Total fuel consumption in liters
   totalVehEmissions [4] BOOLEAN OPTIONAL,
     -- Total vehicle emissions
   numOfLowSpeedEvents [5] CfgLowSpeedCriteria OPTIONAL, -- Low speed threshold
     -- Number of times speed dropped below a low speed threshold (low speed threshold
     -- must be greater than 5 Km/h)
   timeStopped [6] CfgStoppedCriteria OPTIONAL, -- Stopped speed threshold
     -- Seconds spent at speed less than the specified stopped threshold
   numOfStopped [7] CfgStoppedCriteria OPTIONAL,
     -- Number of times the speed fell below the specified stopped threshold
   locOfStops [8] BOOLEAN OPTIONAL,
     -- Each location and duration in seconds where the speed drops below the
     -- specified stopped threshold
   regNumOfVehPassed [9] BOOLEAN OPTIONAL,
     -- Number of vehicles passed over the configuration region
   regNumOfSurpassedVeh [10] BOOLEAN OPTIONAL,
     -- Number of vehicles that passed the recording vehicle over the configuration region
   totalMsgsReceived [11] CfgMsgRecepIndicators OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgSummaryTriggers {
   struct {
      OSUINT8 regTravelTimePresent : 1;
      OSUINT8 regVehDistTraveledPresent : 1;
      OSUINT8 regVehTimeTraveledPresent : 1;
      OSUINT8 fuelConsumptionPresent : 1;
      OSUINT8 totalVehEmissionsPresent : 1;
      OSUINT8 numOfLowSpeedEventsPresent : 1;
      OSUINT8 timeStoppedPresent : 1;
      OSUINT8 numOfStoppedPresent : 1;
      OSUINT8 locOfStopsPresent : 1;
      OSUINT8 regNumOfVehPassedPresent : 1;
      OSUINT8 regNumOfSurpassedVehPresent : 1;
      OSUINT8 totalMsgsReceivedPresent : 1;
   } m;
   OSBOOL regTravelTime;
   OSBOOL regVehDistTraveled;
   OSBOOL regVehTimeTraveled;
   OSBOOL fuelConsumption;
   OSBOOL totalVehEmissions;
   CfgLowSpeedCriteria numOfLowSpeedEvents;
   CfgStoppedCriteria timeStopped;
   CfgStoppedCriteria numOfStopped;
   OSBOOL locOfStops;
   OSBOOL regNumOfVehPassed;
   OSBOOL regNumOfSurpassedVeh;
   CfgMsgRecepIndicators totalMsgsReceived;
   OSRTDList extElem1;
} CfgSummaryTriggers;

EXTERN int asn1PE_CfgSummaryTriggers (OSCTXT* pctxt, CfgSummaryTriggers* pvalue);

EXTERN int asn1PD_CfgSummaryTriggers (OSCTXT* pctxt, CfgSummaryTriggers* pvalue);

EXTERN int asn1Init_CfgSummaryTriggers (CfgSummaryTriggers* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgAveragedAndSummaryTriggers                             */
/*                                                            */
/**************************************************************/
/*
CfgAveragedAndSummaryTriggers ::= CHOICE {
   averagedTriggers [0] CfgAveragedTriggers,
   summaryTriggers [1] CfgSummaryTriggers,
   ...
}
*/
/* Choice tag constants */

#define T_CfgAveragedAndSummaryTriggers_averagedTriggers 1
#define T_CfgAveragedAndSummaryTriggers_summaryTriggers 2
#define T_CfgAveragedAndSummaryTriggers_extElem1 3

typedef struct EXTERN CfgAveragedAndSummaryTriggers {
   OSINT32 t;
   union {
      /* t = 1 */
      CfgAveragedTriggers *averagedTriggers;
      /* t = 2 */
      CfgSummaryTriggers *summaryTriggers;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} CfgAveragedAndSummaryTriggers;

EXTERN int asn1PE_CfgAveragedAndSummaryTriggers (OSCTXT* pctxt, CfgAveragedAndSummaryTriggers* pvalue);

EXTERN int asn1PD_CfgAveragedAndSummaryTriggers (OSCTXT* pctxt, CfgAveragedAndSummaryTriggers* pvalue);

EXTERN int asn1Init_CfgAveragedAndSummaryTriggers (
   CfgAveragedAndSummaryTriggers* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigTriggers                                            */
/*                                                            */
/**************************************************************/
/*
ConfigTriggers ::= CHOICE {
   instantaneousTriggers [0] EXPLICIT CfgInstantaneousEventTriggers,
   avgAndSumTriggers [1] EXPLICIT CfgAveragedAndSummaryTriggers,
   ...
}
*/
/* Choice tag constants */

#define T_ConfigTriggers_instantaneousTriggers 1
#define T_ConfigTriggers_avgAndSumTriggers 2
#define T_ConfigTriggers_extElem1       3

typedef struct EXTERN ConfigTriggers {
   OSINT32 t;
   union {
      /* t = 1 */
      CfgInstantaneousEventTriggers *instantaneousTriggers;
      /* t = 2 */
      CfgAveragedAndSummaryTriggers *avgAndSumTriggers;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} ConfigTriggers;

EXTERN int asn1PE_ConfigTriggers (OSCTXT* pctxt, ConfigTriggers* pvalue);

EXTERN int asn1PD_ConfigTriggers (OSCTXT* pctxt, ConfigTriggers* pvalue);

EXTERN int asn1Init_ConfigTriggers (ConfigTriggers* pvalue);

/**************************************************************/
/*                                                            */
/*  CfgEventRecurrence                                        */
/*                                                            */
/**************************************************************/
/*
 Definition for EventRecruarance borrowed from J2945/4 RSM.
CfgEventRecurrence ::= SEQUENCE {
   startTime [0] DTime OPTIONAL, -- Time of day this period starts
   endTime [1] DTime OPTIONAL, -- Time of day this period ends
   startDate [2] DDate OPTIONAL, -- Date this period starts
   endDate [3] DDate OPTIONAL, -- Date this period ends
     -- Define days of the week for applicable periods (used by EventRecurrence)
   monday [4] BOOLEAN,
   tuesday [5] BOOLEAN,
   wednesday [6] BOOLEAN,
   thursday [7] BOOLEAN,
   friday [8] BOOLEAN,
   saturday [9] BOOLEAN,
   sunday [10] BOOLEAN,
     -- exclusion: TRUE: The period defined here is excluded,
     -- i.e., the period is NOT applicable to the event
   exclusion [11] BOOLEAN OPTIONAL,
   ...
}
*/
typedef struct EXTERN CfgEventRecurrence {
   struct {
      OSUINT8 startTimePresent : 1;
      OSUINT8 endTimePresent : 1;
      OSUINT8 startDatePresent : 1;
      OSUINT8 endDatePresent : 1;
      OSUINT8 exclusionPresent : 1;
   } m;
   struct DTime *startTime;
   struct DTime *endTime;
   struct DDate *startDate;
   struct DDate *endDate;
   OSBOOL monday;
   OSBOOL tuesday;
   OSBOOL wednesday;
   OSBOOL thursday;
   OSBOOL friday;
   OSBOOL saturday;
   OSBOOL sunday;
   OSBOOL exclusion;
   OSRTDList extElem1;
} CfgEventRecurrence;

EXTERN int asn1PE_CfgEventRecurrence (OSCTXT* pctxt, CfgEventRecurrence* pvalue);

EXTERN int asn1PD_CfgEventRecurrence (OSCTXT* pctxt, CfgEventRecurrence* pvalue);

EXTERN int asn1Init_CfgEventRecurrence (CfgEventRecurrence* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigTemporalBoundary                                    */
/*                                                            */
/**************************************************************/
/*
 Defines applicable periods for an event.
ConfigTemporalBoundary ::= SEQUENCE {
   beginTime [0] DDateTime, --From J2735
   endTime [1] DDateTime, --From J2735
   recurring [2] CfgEventRecurrence,
   ...
}
*/
typedef struct EXTERN ConfigTemporalBoundary {
   struct DDateTime *beginTime;
   struct DDateTime *endTime;
   CfgEventRecurrence recurring;
   OSRTDList extElem1;
} ConfigTemporalBoundary;

EXTERN int asn1PE_ConfigTemporalBoundary (OSCTXT* pctxt, ConfigTemporalBoundary* pvalue);

EXTERN int asn1PD_ConfigTemporalBoundary (OSCTXT* pctxt, ConfigTemporalBoundary* pvalue);

EXTERN int asn1Init_ConfigTemporalBoundary (ConfigTemporalBoundary* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigBoundary                                            */
/*                                                            */
/**************************************************************/
/*
ConfigBoundary ::= CHOICE {
   temporalBoundary [0] ConfigTemporalBoundary,
   geoAndDistBoundary [1] ValidRegion,
   ...
}
*/
/* Choice tag constants */

#define T_ConfigBoundary_temporalBoundary 1
#define T_ConfigBoundary_geoAndDistBoundary 2
#define T_ConfigBoundary_extElem1       3

typedef struct EXTERN ConfigBoundary {
   OSINT32 t;
   union {
      /* t = 1 */
      ConfigTemporalBoundary *temporalBoundary;
      /* t = 2 */
      struct ValidRegion *geoAndDistBoundary;
      /* t = 3 */
      ASN1OpenType *extElem1;
   } u;
} ConfigBoundary;

EXTERN int asn1PE_ConfigBoundary (OSCTXT* pctxt, ConfigBoundary* pvalue);

EXTERN int asn1PD_ConfigBoundary (OSCTXT* pctxt, ConfigBoundary* pvalue);

EXTERN int asn1Init_ConfigBoundary (ConfigBoundary* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataConfig                                           */
/*                                                            */
/**************************************************************/
/*
ProbeDataConfig ::= SEQUENCE {
   descriptor [0] ConfigDescriptor,
   triggers [1] EXPLICIT ConfigTriggers,
   maxAgeOfData [2] INTEGER (1..90), -- in days
   boundary [3] EXPLICIT ConfigBoundary OPTIONAL,
   ...
}
*/
typedef struct EXTERN ProbeDataConfig {
   struct {
      OSUINT8 boundaryPresent : 1;
   } m;
   ConfigDescriptor descriptor;
   ConfigTriggers triggers;
   OSUINT8 maxAgeOfData;
   ConfigBoundary boundary;
   OSRTDList extElem1;
} ProbeDataConfig;

EXTERN int asn1PE_ProbeDataConfig (OSCTXT* pctxt, ProbeDataConfig* pvalue);

EXTERN int asn1PD_ProbeDataConfig (OSCTXT* pctxt, ProbeDataConfig* pvalue);

EXTERN int asn1Init_ProbeDataConfig (ProbeDataConfig* pvalue);

/**************************************************************/
/*                                                            */
/*  ProbeDataConfigMessage                                    */
/*                                                            */
/**************************************************************/
/*
ProbeDataConfigMessage ::= SEQUENCE (SIZE (1..255, ...)) OF ProbeDataConfig
*/
/* List of ProbeDataConfig */
typedef OSRTDList ProbeDataConfigMessage;

EXTERN int asn1PE_ProbeDataConfigMessage (OSCTXT* pctxt, ProbeDataConfigMessage* pvalue);

EXTERN int asn1PD_ProbeDataConfigMessage (OSCTXT* pctxt, ProbeDataConfigMessage* pvalue);

EXTERN int asn1Init_ProbeDataConfigMessage (ProbeDataConfigMessage* pvalue);

#ifdef __cplusplus
}
#endif

#endif
